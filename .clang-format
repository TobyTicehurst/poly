# ---
Language: Cpp
Standard: c++17

# # disable formatting here
DisableFormat:   false


# remove indent for 'public:' etc
AccessModifierOffset: -4

# align arguments in multiline functions
AlignAfterOpenBracket: Align

# align array of struct columns
#AlignArrayOfStructures: Left

# align equals signs in assignments
AlignConsecutiveAssignments: false

# align bit fields in structs (disallowed)
#AlignConsecutiveBitFields: false

# align variable names in declarations
AlignConsecutiveDeclarations: false

# align macro definitions
AlignConsecutiveMacros: false

# align newlines in macros
AlignEscapedNewlines: Left

# align operands horizontally in multiline statements
AlignOperands: true

# align comments after a line
AlignTrailingComments: true

# don't allow arguments on a newline
AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false

# don't allow one line shorthands
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
#AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: None
AllowShortLoopsOnASingleLine: false

# newline after return type
AlwaysBreakAfterReturnType: None

# newline before multiline string
AlwaysBreakBeforeMultilineStrings: false

# newline after template
AlwaysBreakTemplateDeclarations: No

# function arguments/parameters either all on one line or one line each
BinPackArguments: false
BinPackParameters: false

# Bit fields not allowed
#BitFieldColonSpacing: After

# all the braces on their own line
BraceWrapping:
  AfterCaseLabel:        true
  AfterClass:            true
  AfterControlStatement: true
  AfterEnum:             true
  AfterFunction:         true
  AfterNamespace:        true
  AfterObjCDeclaration:  true
  AfterStruct:           true
  AfterUnion:            true
  AfterExternBlock:      true
  BeforeCatch:           true
  BeforeElse:            true
  #BeforeLambdaBody:      true
  #BeforeWhile:           true
  IndentBraces:          true
  SplitEmptyFunction:    true
  SplitEmptyRecord:      true
  SplitEmptyNamespace:   true

# always break after operators
BreakBeforeBinaryOperators: None

# all the braces on their own line
BreakBeforeBraces: Allman

# no newline before concept (template)
#BreakBeforeConceptDeclarations: Never

# always break after operators
BreakBeforeTernaryOperators: false

# break after : and , in constructors
BreakConstructorInitializers: AfterColon

# break after : in inheritance
BreakInheritanceList: AfterColon

# break very long string literals
BreakStringLiterals: true

# not sure what a good value here is, standard is 80 which is this:
#.80...........................................................................#
ColumnLimit: 100

# namespace always on a newline
CompactNamespaces: false

# 4 space indent always
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4

# no extra spaces in braced lists
Cpp11BracedListStyle: true

# windows vs linux line endings
DeriveLineEnding: true

# ideally have * and & always left aligned
DerivePointerAlignment: true

# no extra newline before or after 'public:'
#EmptyLineAfterAccessModifier: Never
#EmptyLineBeforeAccessModifier: Never

# don't want bin packing
ExperimentalAutoDetectBinPacking: false

# always good to have more useful comments
FixNamespaceComments: true

# TODO
IncludeBlocks: Preserve
#IncludeCategories:
#IncludeIsMainRegex: '(Test)?$'
#IncludeIsMainSourceRegex: ''

# don't indent 'public:', 'case:', extern "C", goto labels, 
# pre-processor directives, or requires clauses
#IndentAccessModifiers: false
IndentCaseLabels: false
#IndentExternBlock: false
IndentGotoLabels: false
IndentPPDirectives: None
#IndentRequiresClause: false

# all indent widths are 4
IndentWidth: 4

#TODO
IndentWrappedFunctionNames: true

#
#InsertTrailingCommas: true

#
KeepEmptyLinesAtTheStartOfBlocks: false

# default
#LambdaBodyIndentation: Signature

#
MaxEmptyLinesToKeep: 1

#
NamespaceIndentation: None

#PPIndentWidth

#
#PackConstructorInitializers: Never

#PenaltyBreakAssignment: 2
#PenaltyBreakBeforeFirstCallParameter: 19
#PenaltyBreakComment: 300
#PenaltyBreakFirstLessLess: 120
#PenaltyBreakString: 1000
#PenaltyBreakTemplateDeclaration: 10
#PenaltyExcessCharacter: 1000000
#PenaltyReturnTypeOnItsOwnLine: 60

#
PointerAlignment: Left

#TODO
#QualifierOrder

#RawStringFormats

#
#ReferenceAlignment: Left

#
ReflowComments:  true

#RequiresClausePosition

#
#SeparateDefinitionBlocks: Leave

#ShortNamespaceLines

#
SortIncludes: true

#
SortUsingDeclarations: true


SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
#SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
#TODO
#SpacesInLineCommentPrefix: 1
SpacesInParentheses: false
SpacesInSquareBrackets: false

#TODO
TabWidth: 4
UseCRLF: false
UseTab: Never
...

